import Head from "next/head";
import { ChangeEvent, FormEvent, useEffect, useState } from "react";
import { NavBar, FormInputText, PieChart } from "@/components";

import styles from "@/styles/User.module.css";

interface formatItem {
  format: string;
  count: number;
}

export default function User() {
  const [userData, setUserData] = useState<any>([]);
  const [formInputTextValue, setFormInputTextValue] = useState<string>("");
  const [formatLabels, setFormatLabels] = useState<string[]>([]);
  const [formatCounts, setFormatCounts] = useState<number[]>([]);

  const fetchUser = async (name: string) => {
    setUserData([]);

    const url: string = "https://graphql.anilist.co";

    const query: string = `
query ($name: String) {
  User(name: $name) {
    name
    about
    avatar {
      large
      medium
    }
    bannerImage
    statistics {
      anime {
        minutesWatched
        episodesWatched
        meanScore
        scores {
          score
          count
        }
        count
        statuses {
          status
          count
        }
        formats {
          format
          count
        }
        genres {
          genre
          count
        }
        releaseYears {
          releaseYear
          count
        }
      }
      manga {
        count
        minutesWatched
        chaptersRead
        meanScore
        scores {
          score
          count
        }
        count
        statuses {
          status
          count
        }
        genres {
          genre
          count
        }
        releaseYears {
          releaseYear
          count
        }
        formats {
          format
          count
        }
      }
    }
  }
}
`;

    const variables: { name: string } = {
      name: name,
    };

    interface options {
      method: string;
      headers: { "Content-Type": string; Accept: string };
      body: string;
    }

    const options: options = {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        Accept: "application/json",
      },
      body: JSON.stringify({
        query,
        variables,
      }),
    };

    try {
      const response = await fetch(url, options);
      const data = await response.json();
      setUserData(data);

      const formats = data.data.User.statistics.anime.formats;
      console.log(data.data.User.name);

      const formatLabels: string[] = [];
      const formatCounts: number[] = [];

      formats.forEach((formatItem: formatItem) => {
        formatLabels.push(formatItem.format);
        formatCounts.push(formatItem.count);
      });

      setFormatLabels(formatLabels);
      setFormatCounts(formatCounts);
    } catch (e) {
      console.log(e);
    }
  };

  const submitHandler = (event: FormEvent<HTMLFormElement>) => {
    event.preventDefault();
    fetchUser(formInputTextValue);
  };

  const changeHandler = (event: ChangeEvent<HTMLInputElement>) => {
    setFormInputTextValue(event.target.value);
  };

  return (
    <>
      <Head>
        <title>Review Charter - User</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <NavBar />
      <main className={styles["user"]}>
        <FormInputText
          labelText="Enter username:"
          inputValue={formInputTextValue}
          submitHandler={submitHandler}
          changeHandler={changeHandler}
        />
        <h1></h1>
        <PieChart
          label="Number of format type:"
          labelArray={formatLabels}
          dataArray={formatCounts}
        />
      </main>
    </>
  );
}
